Install-Module -Name Az -Force

.\Get-AzurePipelines.ps1 -OrganizationName "your_org_name" -ProjectName "your_project_name" -PAT "your_pat"

param (
    [string]$OrganizationName,
    [string]$ProjectName,
    [string]$PAT
)

function Get-AzurePipelines {
    param (
        [string]$OrganizationName,
        [string]$ProjectName,
        [string]$PAT
    )

    # Convert the Personal Access Token (PAT) to a Base64 encoded string
    $base64AuthInfo = [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes(":$PAT"))

    # Define the Azure DevOps REST API endpoint to get the pipelines
    $url = "https://dev.azure.com/$OrganizationName/$ProjectName/_apis/pipelines?api-version=6.0-preview.1"

    # Invoke the REST API to get pipeline data
    $pipelines = Invoke-RestMethod -Uri $url -Headers @{Authorization=("Basic {0}" -f $base64AuthInfo)} -Method Get

    return $pipelines.value
}

# Get the pipelines using the provided parameters
$pipelines = Get-AzurePipelines -OrganizationName $OrganizationName -ProjectName $ProjectName -PAT $PAT

# Create an array to store pipeline information
$pipelineInfo = @()

# Loop through the pipelines and extract the name and path for those containing "IAM" in their name
foreach ($pipeline in $pipelines) {
    if ($pipeline.name -like "*IAM*") {
        $pipelineData = [PSCustomObject]@{
            Name = $pipeline.name
            Path = $pipeline.path
        }
        $pipelineInfo += $pipelineData
    }
}

# Export the filtered pipeline information to a CSV file
$pipelineInfo | Export-Csv -Path "AzurePipelinesInfo_Filtered.csv" -NoTypeInformation

Write-Host "Filtered pipeline information exported to 'AzurePipelinesInfo_Filtered.csv' successfully."
